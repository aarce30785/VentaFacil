@using VentaFacil.web.Models.Response.Admin
@model UsuarioListResponse
@{
    ViewData["Title"] = "Panel de administrador";
    Layout = "_LayoutPlantilla";
    
}

<!-- ========== table components start ========== -->
<section class="table-components">
    <div class="container-fluid">
        <!-- ========== title-wrapper start ========== -->
        <div class="title-wrapper pt-30">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <div class="title">
                        <h2>Panel de Administrador</h2>
                    </div>
                </div>
                <!-- end col -->
                <div class="col-md-6">
                    <div class="breadcrumb-wrapper">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="#0">Dashboard</a>
                                </li>
                                <li class="breadcrumb-item active" aria-current="page">
                                    Gestión
                                </li>
                            </ol>
                        </nav>
                    </div>
                </div>
                <!-- end col -->
            </div>
            <!-- end row -->
        </div>
        <!-- ========== title-wrapper end ========== -->
        <!-- ========== tabs section start ========== -->
        <div class="tables-wrapper">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card-style mb-30">
                        <!-- Tabs Navigation -->
                        <ul class="nav nav-pills mb-4" id="adminTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="users-tab" data-bs-toggle="pill" data-bs-target="#users" type="button" role="tab" aria-controls="users" aria-selected="true">
                                    <i class="lni lni-users me-2"></i>Usuarios
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="products-tab" data-bs-toggle="pill" data-bs-target="#products" type="button" role="tab" aria-controls="products" aria-selected="false">
                                    <i class="lni lni-package me-2"></i>Productos
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="categoria-tab" data-bs-toggle="pill" data-bs-target="#categoria" type="button" role="tab" aria-controls="categoria" aria-selected="false">
                                    <i class="lni lni-package me-2"></i>Categoria
                                </button>
                            </li>
                        </ul>

                        <!-- Tabs Content -->
                        <div class="tab-content" id="adminTabsContent">

                            <!-- Tab de Usuarios -->
                            <div class="tab-pane fade show active" id="users" role="tabpanel" aria-labelledby="users-tab">
        
                                <!-- Controles de Búsqueda y Filtros -->
                                <div class="row mb-4">
                                    <div class="col-md-8">
                                        <form method="get" asp-action="IndexUsuarios" class="row g-3" id="filtrosForm">
                                            <!-- Campo de búsqueda -->
                                            <div class="col-md-5">
                                                <div class="input-group">
                                                    <input type="text" name="busqueda" class="form-control" 
                                                           placeholder="Buscar por nombre o correo..." 
                                                           value="@Model.Busqueda" />
                                                </div>
                                            </div>

                                            <!-- Filtro por rol -->
                                            <div class="col-md-4">
                                                <select name="rolFiltro" class="form-select">
                                                    <option value="">Todos los roles</option>
                                                    @foreach (var rol in ViewBag.Roles)
                                                    {
                                                        <option value="@rol.Value" 
                                                                selected="@(Model.RolFiltro?.ToString() == rol.Value ? "selected" : null)">
                                                            @rol.Text
                                                        </option>
                                                    }
                                                </select>
                                            </div>

                                            <!-- Botones de acción -->
                                            <div class="col-md-3">
                                                <div class="btn-group w-100" role="group">
                                                    <button type="submit" class="btn btn-primary">
                                                        <i class="lni lni-search-alt"></i> Buscar
                                                    </button>
                                                    <a href="@Url.Action("LimpiarFiltros", "Admin")" class="btn btn-outline-secondary">
                                                        <i class="lni lni-close"></i>
                                                    </a>
                                                </div>
                                            </div>

                                            <!-- Campos ocultos para mantener otros parámetros -->
                                            <input type="hidden" name="pagina" value="1" />
                                            <input type="hidden" name="cantidadPorPagina" value="10" />
                                        </form>
                                    </div>

                                    <div class="col-md-4 text-end">
                                        <button type="button" class="main-btn primary-btn btn-hover" onclick="abrirModal('crear')">
                                            <i class="lni lni-plus"></i> Agregar Usuario
                                        </button>
                                    </div>
                                </div>

                                <!-- Mensaje cuando no hay resultados CON FILTROS APLICADOS -->
                                @if (Model.Usuarios != null && !Model.Usuarios.Any() && (!string.IsNullOrEmpty(Model.Busqueda) || Model.RolFiltro.HasValue))
                                {
                                    <div class="alert alert-info alert-dismissible fade show" role="alert">
                                        <i class="lni lni-info-circle me-2"></i>
                                        <strong>No se encontraron usuarios</strong> que coincidan con los criterios de búsqueda.
                                        <a href="@Url.Action("LimpiarFiltros")" class="alert-link ms-2">Mostrar todos los usuarios</a>
                                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                    </div>
                                }

                                <!-- Mensaje cuando no hay usuarios en absoluto -->
                                @if (Model.Usuarios != null && !Model.Usuarios.Any() && string.IsNullOrEmpty(Model.Busqueda) && !Model.RolFiltro.HasValue)
                                {
                                    <div class="alert alert-info alert-dismissible fade show" role="alert">
                                        <i class="lni lni-info-circle me-2"></i>
                                        <strong>No hay usuarios registrados en el sistema.</strong>
                                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                    </div>
                                }

                                <!-- Tabla de Usuarios -->
                                <div class="table-wrapper table-responsive">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th class="lead-name"><h6>Nombre</h6></th>
                                                <th class="lead-email"><h6>Email</h6></th>
                                                <th class="lead-role"><h6>Rol</h6></th>
                                                <th><h6>Acción</h6></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.Usuarios != null && Model.Usuarios.Any())
                                            {
                                                foreach (var usuario in Model.Usuarios)
                                                {
                                                    <tr>
                                                        <td class="min-width">
                                                            <div class="lead">
                                                                <div class="lead-image">
                                                                    <img src="assets/images/lead/lead-1.png" alt="" />
                                                                </div>
                                                                <div class="lead-text">
                                                                    <p>@usuario.Nombre</p>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="min-width">
                                                            <div class="lead">
                                                                <div class="lead-image">
                                                                    <img src="assets/images/lead/lead-1.png" alt="" />
                                                                </div>
                                                                <div class="lead-text">
                                                                    <p>@usuario.Correo</p>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td class="min-width">
                                                            <span class="status-btn active-btn">@usuario.Rol</span>
                                                        </td>
                                                        <td>
                                                            <div class="action d-flex gap-2">
                                                                <!-- Ver -->
                                                                <a href="javascript:void(0);"
                                                                   onclick="abrirModal('ver', @usuario.Id_Usr)"
                                                                   class="text-primary" title="Ver">
                                                                    <i class="lni lni-eye"></i>
                                                                </a>

                                                                <!-- Editar -->
                                                                <a href="javascript:void(0);"
                                                                   onclick="abrirModal('editar', @usuario.Id_Usr)"
                                                                   class="text-warning" title="Editar">
                                                                    <i class="lni lni-pencil"></i>
                                                                </a>

                                                                <!-- Eliminar -->
                                                                <a class="text-danger" href="javascript:void(0);"
                                                                   onclick="confirmarEliminacion(@usuario.Id_Usr, '@usuario.Nombre.Replace("'", "\\'")')"
                                                                   title="Eliminar">
                                                                    <i class="lni lni-trash-can"></i>
                                                                </a>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else if (Model.Usuarios != null && !Model.Usuarios.Any())
                                            {
                                                <tr>
                                                    <td colspan="4" class="text-center py-4">
                                                        <div class="text-muted">
                                                            <i class="lni lni-users me-2"></i>
                                                            @if (!string.IsNullOrEmpty(Model.Busqueda) || Model.RolFiltro.HasValue)
                                                            {
                                                                <span>No se encontraron usuarios con los filtros aplicados</span>
                                                            }
                                                            else
                                                            {
                                                                <span>No hay usuarios registrados</span>
                                                            }
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td colspan="4" class="text-center py-4">
                                                        <div class="text-muted">
                                                            <i class="lni lni-warning me-2"></i>
                                                            Error al cargar los usuarios
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
        
                                <div id="modalContainer"></div>

                                <!-- Menú de Paginación -->
                                @if (Model.TotalPaginas > 1 && Model.Usuarios != null && Model.Usuarios.Any())
                                {
                                    <div class="pagination-wrapper mt-4">
                                        <nav aria-label="Page navigation">
                                            <ul class="pagination justify-content-center">
                                                <!-- Botón Anterior -->
                                                <li class="page-item @(Model.PaginaActual == 1 ? "disabled" : "")">
                                                    <a class="page-link" 
                                                       href="@Url.Action("IndexUsuarios", "Admin", new { 
                                                           pagina = Model.PaginaActual - 1, 
                                                           cantidadPorPagina = 10,
                                                           busqueda = Model.Busqueda,
                                                           rolFiltro = Model.RolFiltro
                                                       })"
                                                       tabindex="-1" aria-disabled="@(Model.PaginaActual == 1 ? "true" : "false")">
                                                        <i class="lni lni-chevron-left"></i>
                                                    </a>
                                                </li>

                                                <!-- Números de página -->
                                                @for (int i = 1; i <= Model.TotalPaginas; i++)
                                                {
                                                    <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                                                        <a class="page-link" 
                                                           href="@Url.Action("IndexUsuarios", "Admin", new { 
                                                               pagina = i, 
                                                               cantidadPorPagina = 10,
                                                               busqueda = Model.Busqueda,
                                                               rolFiltro = Model.RolFiltro
                                                           })">@i</a>
                                                    </li>
                                                }

                                                <!-- Botón Siguiente -->
                                                <li class="page-item @(Model.PaginaActual == Model.TotalPaginas ? "disabled" : "")">
                                                    <a class="page-link" 
                                                       href="@Url.Action("IndexUsuarios", "Admin", new { 
                                                           pagina = Model.PaginaActual + 1, 
                                                           cantidadPorPagina = 10,
                                                           busqueda = Model.Busqueda,
                                                           rolFiltro = Model.RolFiltro
                                                       })">
                                                        <i class="lni lni-chevron-right"></i>
                                                    </a>
                                                </li>
                                            </ul>
                                        </nav>

                                        <!-- Información de paginación -->
                                        <div class="pagination-info text-center mt-2">
                                            @{
                                                var inicio = (Model.PaginaActual - 1) * 10 + 1;
                                                var fin = Math.Min(Model.PaginaActual * 10, Model.TotalUsuarios);
                                            }
                    
                                            <p class="text-sm text-muted">
                                                Mostrando @inicio-@fin de @Model.TotalUsuarios registros
                        
                                                @if (!string.IsNullOrEmpty(Model.Busqueda) || Model.RolFiltro.HasValue)
                                                {
                                                    <span class="ms-2">
                                                        <a href="@Url.Action("LimpiarFiltros")" class="text-primary text-decoration-underline">
                                                            (Ver todos)
                                                        </a>
                                                    </span>
                                                }
                                            </p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        </div> <!-- end card -->
                </div> <!-- end col -->
            </div> <!-- end row -->
        </div> <!-- ========== tabs section end ========== -->
    </div> <!-- end container -->
</section>

@section Scripts {
    <script>
    // Auto-submit del filtro de rol cuando cambia
        document.querySelector('select[name="rolFiltro"]')?.addEventListener('change', function() {
            document.getElementById('filtrosForm').submit();
        });

        // Manejar el evento de enter en el campo de búsqueda
        document.querySelector('input[name="busqueda"]')?.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                document.getElementById('filtrosForm').submit();
            }
        });

        // Función para abrir el modal
        
        function abrirModal(accion, usuarioId = null) {
            let url = '';
            const params = new URLSearchParams();

            // Agregar parámetros básicos
            params.append('accion', accion);
        
            // Agregar usuarioId si existe
            if (usuarioId) {
                params.append('usuarioId', usuarioId);
            }

            // Mantener los filtros actuales
            const busqueda = '@Html.Raw(Model.Busqueda ?? "")';
            const rolFiltro = '@(Model.RolFiltro?.ToString() ?? "")';
            const pagina = '@Model.PaginaActual';

            if (busqueda) {
                params.append('busqueda', busqueda);
            }
            if (rolFiltro) {
                params.append('rolFiltro', rolFiltro);
            }
            if (pagina) {
                params.append('pagina', pagina);
            }

            url = '@Url.Action("ObtenerModalUsuario", "Admin")' + '?' + params.toString();

            if (url) {
                // Cargar el modal via AJAX
                fetch(url)
                    .then(response => response.text())
                    .then(data => {
                        document.getElementById('modalContainer').innerHTML = data;

                        // Mostrar el modal
                        const modal = new bootstrap.Modal(document.getElementById('usuarioModal'));
                        modal.show();

                        // Configurar el formulario según la acción
                        configurarModal(accion);
                    })
                    .catch(error => console.error('Error:', error));
            }
        }


        // Función para configurar el modal según la acción
        function configurarModal(accion) {
            const form = document.getElementById('usuarioForm');
            const inputs = form.querySelectorAll('input, select, textarea');
            const btnGuardar = document.getElementById('btnGuardarUsuario');

            switch(accion) {
                case 'ver':
                    // Deshabilitar todos los inputs
                    inputs.forEach(input => {
                        input.disabled = true;
                        input.readOnly = true;
                    });
                    // Ocultar botón guardar
                    if (btnGuardar) btnGuardar.style.display = 'none';
                    break;

                case 'crear':
                case 'editar':
                    // Habilitar todos los inputs
                    inputs.forEach(input => {
                        input.disabled = false;
                        input.readOnly = false;
                    });
                    // Mostrar botón guardar
                    if (btnGuardar) btnGuardar.style.display = 'block';
                
                    // Configurar el evento submit para el formulario
                    configurarSubmitForm(accion);
                    break;
            }
        }

        
        // Función para configurar el envío del formulario
        function configurarSubmitForm(accion) {
            const form = document.getElementById('usuarioForm');
    
            // Remover event listeners previos
            form.replaceWith(form.cloneNode(true));
            const newForm = document.getElementById('usuarioForm');
    
            newForm.addEventListener('submit', function(e) {
                e.preventDefault();
        
                // Crear FormData correctamente
                const formData = new FormData(newForm);
        
                // Convertir a objeto manejando correctamente el checkbox
                const data = {};
                for (let [key, value] of formData.entries()) {
                    // Manejar el checkbox Estado
                    if (key === 'Estado') {
                        data[key] = true; // Si está en el FormData, significa que está checked
                    } else {
                        data[key] = value;
                    }
                }
        
                // Si el checkbox no está en el FormData, establecerlo como false
                if (!formData.has('Estado')) {
                    data.Estado = false;
                }
        
                // Agregar los filtros actuales al objeto data
                data.busqueda = '@Html.Raw(Model.Busqueda ?? "")';
                data.rolFiltro = '@(Model.RolFiltro?.ToString() ?? "")';
                data.pagina = '@Model.PaginaActual';
        
                console.log('Datos a enviar:', data); // Para debugging
        
                fetch('@Url.Action("GuardarUsuario", "Admin")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify(data)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Error en la respuesta del servidor');
                    }
                    return response.json();
                })
                .then(result => {
                    if (result.success) {
                        // Cerrar el modal
                        const modal = bootstrap.Modal.getInstance(document.getElementById('usuarioModal'));
                        modal.hide();
                
                        // Mostrar mensaje de éxito
                        alert(result.message);
                
                        // Recargar la página manteniendo los filtros
                        const filtros = result.filtros || {};
                        window.location.href = '@Url.Action("IndexUsuarios", "Admin")' + 
                            `?busqueda=${encodeURIComponent(filtros.busqueda || '')}` +
                            `&rolFiltro=${filtros.rolFiltro || ''}` +
                            `&pagina=${filtros.pagina || 1}`;
                    } else {
                        // Mostrar errores
                        alert(result.message);
                        if (result.errors) {
                            console.error('Errores:', result.errors);
                        }
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al guardar el usuario: ' + error.message);
                });
            });
        }

        // Función para confirmar eliminación
        function confirmarEliminacion(usuarioId, usuarioNombre) {
            // Obtener filtros actuales
            const busqueda = '@Html.Raw(Model.Busqueda)';
            const rolFiltro = '@Model.RolFiltro';
            const pagina = '@Model.PaginaActual';
        
            if (confirm(`¿Está seguro de que desea eliminar al usuario "${usuarioNombre}"?`)) {
                // Construir URL con parámetros de filtro
                let url = '@Url.Action("EliminarUsuario", "Admin")' + 
                         `?id=${usuarioId}` +
                         `&busqueda=${encodeURIComponent(busqueda)}` +
                         `&rolFiltro=${rolFiltro}` +
                         `&pagina=${pagina}`;
            
                window.location.href = url;
            }
        }

        // Cerrar modal y limpiar
        document.addEventListener('hidden.bs.modal', function (e) {
            if (e.target.id === 'usuarioModal') {
                document.getElementById('modalContainer').innerHTML = '';
            }
        });

        // Manejar el evento de enter en el campo de búsqueda
        document.querySelector('input[name="busqueda"]')?.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                document.getElementById('filtrosForm').submit();
            }
        });
    </script>
}
<!-- ========== table components end ========== -->






