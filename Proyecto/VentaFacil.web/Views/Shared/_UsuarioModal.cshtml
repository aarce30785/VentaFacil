@model VentaFacil.web.Models.Dto.UsuarioDto
@{
    var accionModal = ViewBag.AccionModal as string;
    var roles = ViewBag.Roles as IEnumerable<SelectListItem> ?? new List<SelectListItem>();
}

<div class="modal fade" id="usuarioModal" tabindex="-1" aria-labelledby="usuarioModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="usuarioModalLabel">
                    @if (accionModal == "crear")
                    {
                        <text>Crear Usuario</text>
                    }
                    else if (accionModal == "editar")
                    {
                        <text>Editar Usuario</text>
                    }
                    else
                    {
                        <text>Ver Usuario</text>
                    }
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            @using (Html.BeginForm("GuardarUsuario", "Admin", FormMethod.Post, new { @class = "row g-4", id = "usuarioForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Id_Usr)

                <div class="modal-body">

                    <div class="col-md-6">
                        <div class="form-outline">
                            @Html.TextBoxFor(m => m.Nombre, new {
                                @class = "form-control",
                                placeholder = "Ingrese el nombre completo",
                                @readonly = (accionModal == "ver") ? "readonly" : null
                            })
                            @Html.LabelFor(m => m.Nombre, new { @class = "form-label" })
                            <span class="text-danger field-validation-valid" data-valmsg-for="Nombre" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-outline">
                            @Html.TextBoxFor(m => m.Correo, new {
                                @class = "form-control",
                                type = "email",
                                placeholder = "ejemplo@correo.com",
                                @readonly = (accionModal == "ver") ? "readonly" : null
                            })
                            @Html.LabelFor(m => m.Correo, new { @class = "form-label" })
                            <span class="text-danger field-validation-valid" data-valmsg-for="Correo" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    @if (accionModal == "crear" || accionModal == "editar")
                    {
                        <div class="col-md-6">
                            <div class="form-outline">
                                @Html.PasswordFor(m => m.Contrasena, new {
                                    @class = "form-control",
                                    placeholder = (accionModal == "crear") ? "Ingrese la contraseña" : "Dejar en blanco para mantener actual",
                                    id = "Contrasena"
                                })
                                @Html.LabelFor(m => m.Contrasena, new { @class = "form-label" })
                                <div class="form-text text-muted">
                                    @if (accionModal == "crear")
                                    {
                                        <text>Mínimo 6 caracteres</text>
                                    }
                                    else
                                    {
                                        <text>Complete solo si desea cambiar la contraseña</text>
                                    }
                                </div>
                                <span class="text-danger field-validation-valid" data-valmsg-for="Contrasena" data-valmsg-replace="true"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-outline">
                                @Html.PasswordFor(m => m.ConfirmarContrasena, new {
                                    @class = "form-control",
                                    placeholder = (accionModal == "crear") ? "Confirme la contraseña" : "Confirmar nueva contraseña",
                                    id = "ConfirmarContrasena"
                                })
                                @Html.LabelFor(m => m.ConfirmarContrasena, new { @class = "form-label" })
                                <span class="text-danger field-validation-valid" data-valmsg-for="ConfirmarContrasena" data-valmsg-replace="true"></span>
                            </div>
                        </div>
                    }

                    <div class="col-md-6">
                        <div class="form-outline">
                            @Html.DropDownListFor(m => m.Rol,
                                new SelectList(roles, "Value", "Text"),
                                "Seleccione un rol",
                                new { 
                                    @class = "form-select", 
                                    @disabled = (accionModal == "ver") ? "disabled" : null
                                }
                            )
                            @Html.LabelFor(m => m.Rol, new { @class = "form-label" })
                            <span class="text-danger field-validation-valid" data-valmsg-for="Rol" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-check form-switch mt-4">
                            @Html.CheckBoxFor(m => m.Estado, new { 
                                @class = "form-check-input",
                                @disabled = (accionModal == "ver") ? "disabled" : null
                            })
                            @Html.LabelFor(m => m.Estado, "Usuario Activo", new { @class = "form-check-label" })
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancelar</button>

                    @if (accionModal == "crear" || accionModal == "editar")
                    {
                        <button type="submit" class="btn btn-primary" id="btnGuardarUsuario">Guardar</button>
                    }

                    @if (accionModal == "ver")
                    {
                        @Html.ActionLink("Editar", "IndexUsuarios", "Admin", 
                            new { pagina = ViewBag.PaginaActual, usuarioId = Model.Id_Usr, accion = "editar" }, 
                            new { @class = "btn btn-warning" })
                    }
                </div>

                <input type="hidden" name="busqueda" value="@ViewBag.BusquedaActual" />
                <input type="hidden" name="rolFiltro" value="@ViewBag.RolFiltroActual" />
                <input type="hidden" name="pagina" value="@ViewBag.PaginaActual" />
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var accionModal = '@accionModal';
            var form = document.getElementById('usuarioForm');
            
            // Deshabilitar validación HTML5 completamente
            form.setAttribute('novalidate', 'novalidate');
            
            if (form) {
                form.addEventListener('submit', function (e) {
                    var isValid = true;
                    
                    // Validación manual para creación
                    if (accionModal === 'crear') {
                        var contrasena = document.getElementById('Contrasena').value;
                        var confirmar = document.getElementById('ConfirmarContrasena').value;
                        
                        if (!contrasena || contrasena.length < 6) {
                            alert('La contraseña es requerida y debe tener al menos 6 caracteres');
                            isValid = false;
                        }
                        
                        if (contrasena !== confirmar) {
                            alert('Las contraseñas no coinciden');
                            isValid = false;
                        }
                    }
                    
                    // Validación manual para edición
                    if (accionModal === 'editar') {
                        var contrasena = document.getElementById('Contrasena').value;
                        var confirmar = document.getElementById('ConfirmarContrasena').value;
                        
                        // Solo validar si se llenó alguno de los campos
                        if (contrasena || confirmar) {
                            if (!contrasena || !confirmar) {
                                alert('Debe completar ambos campos de contraseña si desea cambiarla');
                                isValid = false;
                            } else if (contrasena.length < 6) {
                                alert('La contraseña debe tener al menos 6 caracteres');
                                isValid = false;
                            } else if (contrasena !== confirmar) {
                                alert('Las contraseñas no coinciden');
                                isValid = false;
                            }
                        }
                    }
                    
                    if (!isValid) {
                        e.preventDefault();
                        return false;
                    }
                });
            }
        });
    </script>
}





