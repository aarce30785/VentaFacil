name: dockercompose15169299182936299497
services:
  sqlserver:
    container_name: ventafacil-db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_DATA_DIR: /var/opt/mssql/data
      MSSQL_PID: Developer
      MSSQL_SA_PASSWORD: VentaFacilDb123!
      MSSQL_TCP_PORT: "1433"
    hostname: mssql-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      default:
        aliases:
          - sqlserver
    ports:
      - mode: ingress
        target: 1433
        published: "1455"
        protocol: tcp
    volumes:
      - type: volume
        source: sqlserver_data
        target: /var/opt/mssql
        volume: {}
      - type: bind
        source: C:\Git\DesarrolloSistemas\Proyecto\log
        target: /var/opt/mssql/log
        bind:
          create_host_path: true
      - type: bind
        source: C:\Git\DesarrolloSistemas\Proyecto\secrets
        target: /var/opt/mssql/secrets
        bind:
          create_host_path: true
      - type: bind
        source: C:\Git\DesarrolloSistemas\Proyecto\init
        target: /app/init
        bind:
          create_host_path: true
  ventafacil.web:
    build:
      context: C:\Git\DesarrolloSistemas\Proyecto
      dockerfile: VentaFacil.web/Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_Kestrel__Certificates__Default__Password: Ventafacil123
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/ventafacil.pfx
      ASPNETCORE_URLS: https://+:8081;http://+:8080
      ConnectionStrings__DefaultConnection: Server=sqlserver;Database=VentaFacilDB;User Id=sa;Password=VentaFacilDb123!;TrustServerCertificate=true;
      ConnectionStrings__MasterConnection: Server=sqlserver,1433;Database=master;User Id=sa;Password=VentaFacilDb123!;TrustServerCertificate=true;
      DOTNET_RUNNING_IN_CONTAINER: "true"
    image: ventafacil.web
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8081"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: volume
        source: shared_dataprotection_keys
        target: /app/keys
        volume: {}
      - type: volume
        source: app_uploads
        target: /wwwroot/uploads
        volume: {}
      - type: bind
        source: C:\Users\anton\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\anton\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\anton\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\anton\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\anton/.aspnet/https
        target: /https
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose15169299182936299497_default
    driver: bridge
volumes:
  app_uploads:
    name: dockercompose15169299182936299497_app_uploads
    driver: local
    driver_opts:
      device: C:\Git\DesarrolloSistemas\Proyecto\uploads
      o: bind
      type: none
  shared_dataprotection_keys:
    name: dockercompose15169299182936299497_shared_dataprotection_keys
    driver: local
    driver_opts:
      device: C:\Git\DesarrolloSistemas\Proyecto\dataprotection_keys
      o: bind
      type: none
  sqlserver_data:
    name: dockercompose15169299182936299497_sqlserver_data